name: BSN Frontend Pipeline

on:
  push:
    branches:
      - main
    paths:
      - book-network-ui/**
      - docker/frontend/**
      - 'docker-compose.yml'
      - .github/workflows/*-frontend.yml

jobs:
    build-image:
      name: BuildFE Docker Image
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Extract project version
          id: extract_version
          run: |
            cd book-network-ui
            sudo apt-get update
            sudo apt-get install jq
            echo "VERSION=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT

        - name: Login to DockerHub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Build & Push to DockerHub
          uses: docker/build-push-action@v5
          with:
            context: book-network-ui
            file: docker/frontend/Dockerfile
            push: true
            platforms: linux/amd64
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/bsn-ui:${{ steps.extract_version.outputs.VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/bsn-ui:latest
            build-args: |
              PROFILE=dev
              APP_VERSION=${{ steps.extract_version.outputs.VERSION }}
#dummy
#    deploy:
#          name: Deploy Frontend
#          runs-on: ubuntu-latest
#          needs: [ build-image ]
#          steps:
#            - name: Create deployment folder
#              run: |
#                mkdir -p ~/.ssh
#                ssh-keyscan -H ${{ secrets.VPS_IP }} >> ~/.ssh/known_hosts
#                chmod 644 ~/.ssh/known_hosts
#                ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} "mkdir -p ci-cd"
#
#            - name: Copy docker-compose file
#              run: |
#                mkdir -p ~/.ssh
#                ssh-keyscan -H ${{ secrets.VPS_IP }} >> ~/.ssh/known_hosts
#                chmod 644 ~/.ssh/known_hosts
#                scp docker-compose.yml ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }}:ci-cd/docker-compose.yml
#
#            - name: Set ENV variables and deploy
#              run: |
#                mkdir -p ~/.ssh
#                ssh-keyscan -H ${{ secrets.VPS_IP }} >> ~/.ssh/known_hosts
#                chmod 644 ~/.ssh/known_hosts
#                ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} <<EOF
#                cd ci-cd
#                docker-compose -f docker-compose.yml pull -q
#                docker-compose -f docker-compose.yml up -d
#                EDF

    deploy:
      name: Deploy Frontend
      runs-on: ubuntu-latest
      needs: [ build-image ]
      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: List workspace files
          run: ls -la

        - name: Add VPS to known hosts
          run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan -H ${{ secrets.VPS_IP }} >> ~/.ssh/known_hosts
            chmod 644 ~/.ssh/known_hosts

        - name: Create deployment folder
          run: |
            ssh -i ~/.ssh/id_rsa ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} "mkdir -p ci-cd"

        - name: Copy docker-compose file
          run: |
            scp -i ~/.ssh/id_rsa docker-compose.yml ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }}:ci-cd/docker-compose.yml

        - name: Set ENV variables and deploy
          run: |
            ssh -i ~/.ssh/id_rsa ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} <<EOF
            cd ci-cd
            docker-compose -f docker-compose.yml pull -q
            docker-compose -f docker-compose.yml up -d
            EOF
